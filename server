# laba3
def print_hi(name):
    # Use a breakpoint in the code line below to debug your script.
    print(f'Hi, {name}')  # Press Ctrl+F8 to toggle the breakpoint.
import socket, time

def encoder(text):
    """This function is using Ceasars ciphre to encode
    messages in our function"""
    text_new = ''
    digit = ''
    step1 = 1

    #Проходимося по кожному символу в тексті
    for a in text:
            #якщо цифра то збираємо в окрему стрінгу DIGIT
            range_ = ord(a)
            if range_ in range(48,58):
                digit = digit + a
                continue
            #якщо вжк не цифра і якщо DIGIT не пустий то зсовуємо його на 1 і записуємо в результат і чистим DIGIT
            elif digit != "":
                digit = int(digit)
                digit = digit + step1
                digit = str(digit)
                text_new = text_new + digit
                digit = ""

            #якщо буква то
            if range_ in range(97,123) or range_ in range(1072,1104) or range_ in range(65,91) or range_ in range(1040,1072) or range_ == "1168"or"1169"or"1028"or"1108"or"1031"or"1111": ###IMPORTANT NOTE:
                if a == "Z":                                                                                                                                                               ###LAST RANGE DEFINITION IS FOR CHARACTERS
                    a = "A"                                                                                                                                                                   ### WHICH ARE ADDED RECENTLY IN CHARSET SO THEY HAVE
                    text_new = text_new + a                                                                                                                                                      ### CODE NOT IN UKR ALPHABET RANGE
                    continue                                                                                                                                                                           ###WE WILL DEFINE THEM WITH OTHER CHARACTERS
                                                                                                                                                                                                       ### DECODER WILL DECODE THIS CHARACTERS NORMALLY
                elif a == "z":
                    a = "a"
                    text_new = text_new + a
                    continue
                elif a == "Я":
                    a = "А"
                    text_new = text_new + a
                    continue
                elif a == "я":
                    a = "а"
                    text_new = text_new + a
                    continue
                else:
                    code_of_symbol = ord(a)
                    code_of_symbol += step1
                    a = chr(code_of_symbol)
                    text_new = text_new + a
                    continue
    #додаємо все з DIGIT якщо він не пустий в результат
    if digit != "":
        digit = int(digit)
        digit = digit + step1
        digit = str(digit)
        text_new = text_new + digit
    return text_new

def decoder(text):
    """This function is created to decode encrypted
    messages (in this repository is used to decrypt messages encrypted by function "encoder")"""
    text_new = ''
    digit = ''
    step1 = -1


    #Проходимося по кожному символу в тексті
    for a in text:
            #якщо цифра то збираємо в окрему стрінгу DIGIT
            range_ = ord(a)
            if range_ in range(48,58):
                digit = digit + a
                continue
            #якщо вжк не цифра і якщо DIGIT не пустий то зсовуємо його на 1 і запсуємо в результат і чистим DIGIT
            elif digit != "":
                    digit = int(digit)
                    digit = digit + step1
                    digit = str(digit)
                    text_new = text_new + digit
                    digit = ""

            #якщо буква то
            if range_ in range(97,122) or range_ in range(1072,1103) or range_ in range(65,90) or range_ in range(1040,1071) or range_ == "1168"or"1169"or"1028"or"1108"or"1031"or"1111": ###FOR LAST RANGE AND
                if a == "A":                                                                                                                                                              ###DESCIPRION ABOUT IT
                                                                                                                                                                                        ##YOU CAN SEE IN def_encoder.py
                    a = "Z"                                                                                                                                                             ##(also in this repository)
                    text_new = text_new + a
                    continue
                elif a == "a":
                    a = "z"
                    text_new = text_new + a
                    continue
                elif a == "А":
                    a = "Я"
                    text_new = text_new + a
                    continue
                elif a == "а":
                    a = "я"
                    text_new = text_new + a
                    continue
                else:
                    code_of_symbol = ord(a)
                    code_of_symbol += step1
                    a = chr(code_of_symbol)
                    text_new = text_new + a
                    continue
    #додаємо все з DIGIT якщо він не пустий в результат
    if digit != "":
        digit = int(digit)
        digit = digit + step1
        digit = str(digit)
        text_new = text_new + digit
    return text_new



print(socket.gethostname())
print(socket.gethostbyname(socket.gethostname()))
host = socket.gethostbyname(socket.gethostname())
port = 4040

clients = []

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind((host, port))

quit = False
print("[ SStarted ]")

while not quit:
    try:
        data, addr = s.recvfrom(1024)

        if addr not in clients:
            clients.append(addr)

        decrypt = " "
        k = False
        data2 = data.decode("utf-8")
        for i in data2:
               if i == ":":
                   k = True
                   decrypt += i
               elif k == False or i == " ":
                   decrypt += i
               else:
                   decrypt += decoder(i)

        itsatime = time.strftime("%Y-%m-%d-%H.%M.%S", time.localtime())

        print("[" + addr[0] + "]==[" + str(addr[1]) + "]=[" + itsatime + "]/", end="")
        #print(data.decode("utf-8"))
        print(decrypt)

        for client in clients:
            if addr != client:
                s.sendto(data, client)
    except:
        print("\n[ Server Stopped ]")
        quit = True

s.close()
